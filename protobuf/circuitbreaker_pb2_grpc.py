# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import circuitbreaker_pb2 as circuitbreaker__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class HttpStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Request = channel.unary_unary(
                '/protobuf.Http/Request',
                request_serializer=circuitbreaker__pb2.RequestInput.SerializeToString,
                response_deserializer=circuitbreaker__pb2.Response.FromString,
                )
        self.Get = channel.unary_unary(
                '/protobuf.Http/Get',
                request_serializer=circuitbreaker__pb2.GetInput.SerializeToString,
                response_deserializer=circuitbreaker__pb2.Response.FromString,
                )
        self.Post = channel.unary_unary(
                '/protobuf.Http/Post',
                request_serializer=circuitbreaker__pb2.PostInput.SerializeToString,
                response_deserializer=circuitbreaker__pb2.Response.FromString,
                )
        self.Put = channel.unary_unary(
                '/protobuf.Http/Put',
                request_serializer=circuitbreaker__pb2.PutInput.SerializeToString,
                response_deserializer=circuitbreaker__pb2.Response.FromString,
                )
        self.Delete = channel.unary_unary(
                '/protobuf.Http/Delete',
                request_serializer=circuitbreaker__pb2.DeleteInput.SerializeToString,
                response_deserializer=circuitbreaker__pb2.Response.FromString,
                )


class HttpServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Request(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Put(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HttpServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Request': grpc.unary_unary_rpc_method_handler(
                    servicer.Request,
                    request_deserializer=circuitbreaker__pb2.RequestInput.FromString,
                    response_serializer=circuitbreaker__pb2.Response.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=circuitbreaker__pb2.GetInput.FromString,
                    response_serializer=circuitbreaker__pb2.Response.SerializeToString,
            ),
            'Post': grpc.unary_unary_rpc_method_handler(
                    servicer.Post,
                    request_deserializer=circuitbreaker__pb2.PostInput.FromString,
                    response_serializer=circuitbreaker__pb2.Response.SerializeToString,
            ),
            'Put': grpc.unary_unary_rpc_method_handler(
                    servicer.Put,
                    request_deserializer=circuitbreaker__pb2.PutInput.FromString,
                    response_serializer=circuitbreaker__pb2.Response.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=circuitbreaker__pb2.DeleteInput.FromString,
                    response_serializer=circuitbreaker__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'protobuf.Http', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Http(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Request(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobuf.Http/Request',
            circuitbreaker__pb2.RequestInput.SerializeToString,
            circuitbreaker__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobuf.Http/Get',
            circuitbreaker__pb2.GetInput.SerializeToString,
            circuitbreaker__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobuf.Http/Post',
            circuitbreaker__pb2.PostInput.SerializeToString,
            circuitbreaker__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Put(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobuf.Http/Put',
            circuitbreaker__pb2.PutInput.SerializeToString,
            circuitbreaker__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobuf.Http/Delete',
            circuitbreaker__pb2.DeleteInput.SerializeToString,
            circuitbreaker__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ListenerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OpenCircuits = channel.unary_unary(
                '/protobuf.Listener/OpenCircuits',
                request_serializer=circuitbreaker__pb2.ServiceEndpoints.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.CloseCircuits = channel.unary_unary(
                '/protobuf.Listener/CloseCircuits',
                request_serializer=circuitbreaker__pb2.ServiceEndpoints.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class ListenerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def OpenCircuits(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloseCircuits(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ListenerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OpenCircuits': grpc.unary_unary_rpc_method_handler(
                    servicer.OpenCircuits,
                    request_deserializer=circuitbreaker__pb2.ServiceEndpoints.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'CloseCircuits': grpc.unary_unary_rpc_method_handler(
                    servicer.CloseCircuits,
                    request_deserializer=circuitbreaker__pb2.ServiceEndpoints.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'protobuf.Listener', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Listener(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def OpenCircuits(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobuf.Listener/OpenCircuits',
            circuitbreaker__pb2.ServiceEndpoints.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CloseCircuits(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobuf.Listener/CloseCircuits',
            circuitbreaker__pb2.ServiceEndpoints.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
